#include <bits/stdc++.h> 
using namespace std;
 
int n =1000001;
 
 
int main()
{
     ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
 
     bool prime[n+1]; 
     memset(prime, true, sizeof(prime)); 
     prime[0] = prime[1] = false;
     for (int p=2; p*p<=n; p++) 
     { 
          if (prime[p] == true) 
          { 
               for (int i=p*p; i<=n; i += p) 
                    prime[i] = false; 
          } 
     } 
     int n;
    cin>>n;
    vector<int> primE,composite;
    for(int i=0;i<n;i++)
    {
        int x;
        cin>>x;
        if(prime[x])
            primE.push_back(x);
        else
            composite.push_back(x);
    }
    for(int i=0;i<primE.size();i++)
    {
        cout<<primE[i]<<" ";
    }
    if(primE.size()!=0)
        cout<<endl;
    for(int i=composite.size()-1;i>=0;i--)
    {
        cout<<composite[i]<<" ";
    }
}
